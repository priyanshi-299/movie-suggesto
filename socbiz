import pandas as pd
df=pd.read_csv(r"C:\Users\Admin\Downloads\train (3).csv")
print(df)
print(df.isnull().sum())
# Import necessary libraries
# import pandas as pd
# from sklearn.model_selection import train_test_split
# from sklearn.ensemble import RandomForestClassifier
# from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# # Generate a sample dataset (replace this with your actual dataset)
# data = {
#     'Customer_Age': [25, 30, 35, 40, 45, 50, 55, 60, 65, 70],
#     'Monthly_Spending': [50, 80, 75, 100, 120, 150, 130, 160, 180, 200],
#     'Customer_Service_Calls': [1, 2, 0, 3, 1, 0, 2, 1, 4, 3],
#     'Churn': [0, 0, 0, 1, 0, 1, 0, 1, 1, 1]  # 0: No Churn, 1: Churn
# }

# df = pd.DataFrame(data)

# # Split the data into features (X) and target variable (y)
# X = df.drop('Churn', axis=1)
# y = df['Churn']

# # Split the data into training and testing sets
# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# # Instantiate a Random Forest classifier
# model = RandomForestClassifier(n_estimators=100, random_state=42)

# # Train the model
# model.fit(X_train, y_train)

# # Make predictions on the test set
# y_pred = model.predict(X_test)

# # Evaluate the model
# accuracy = accuracy_score(y_test, y_pred)
# conf_matrix = confusion_matrix(y_test, y_pred)
# classification_rep = classification_report(y_test, y_pred)

# print(f'Accuracy: {accuracy}')
# print
